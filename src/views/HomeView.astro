---
import AppLayout from '@layouts/AppLayout.astro';
import CourseCard from '@components/common/CourseCard.astro';
import CourseDB from '@/database/CourseDB';
import Lang from '@/models/Lang';

export interface Props {
  lang: Lang;
}

const { lang } = Astro.props;
const title = lang.isChinese() ? '快易知' : 'Quick Knowledge';
const description = lang.isChinese()
  ? '追寻知识的纯粹之光'
  : 'Pursuing the Pure Light of Knowledge';

// Hero section data
const name: Record<'zh-cn' | 'en', string> = {
  'zh-cn': '快易知',
  en: 'Kuai Yi Zhi',
};

const heroText: Record<'zh-cn' | 'en', string> = {
  'zh-cn': '沉浸式学习平台，帮您构建完整的知识网络',
  en: 'Immersive Learning Platform, Help You Build a Complete Knowledge Network',
};

const courses = await CourseDB.getFamousCourses(lang.code);

// Card grid data
const cards: Array<{
  emoji: string;
  title: Record<'zh-cn' | 'en', string>;
  description: Record<'zh-cn' | 'en', string>;
}> = [
  {
    emoji: '🚀',
    title: {
      'zh-cn': '快速加载',
      en: 'Fast Loading',
    },
    description: {
      'zh-cn': '绝不拖累你的浏览器',
      en: 'Never slows down your browser',
    },
  },
  {
    emoji: '🪧',
    title: {
      'zh-cn': '广告全无',
      en: 'Ad-Free',
    },
    description: {
      'zh-cn': '没有广告，用户体验永远最佳',
      en: 'No ads, best user experience always',
    },
  },
  {
    emoji: '🧩',
    title: {
      'zh-cn': '生动的文档',
      en: 'Interactive Docs',
    },
    description: {
      'zh-cn': '文档不再是静态的文字和图片，你可以和它充分交互',
      en: 'Documents are no longer static text and images, you can fully interact with them',
    },
  },
];
---

<AppLayout title={title} description={description}>
  <div>
    {/* Hero Section */}
    <div class="hero min-h-[70vh] bg-base-200/0">
      <div class="hero-content flex-col flex gap-8">
        <div class="text-center lg:text-left flex flex-col gap-4 items-center">
          <h1 class="text-7xl text-base-content/70 pb-6">{name[lang.code]}</h1>
        </div>

        <div class="text-center lg:text-left flex flex-col gap-4 items-center">
          <h2 class="text-3xl text-base-content/70 pb-6">
            {heroText[lang.code]}
          </h2>
        </div>

        <div class="max-w-none">
          <div
            class="container mx-auto mt-12 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-4 2xl:grid-cols-4 gap-8">
            {
              courses.map((course) => (
                <CourseCard title={course.getTitle()} link={course.getLink()} />
              ))
            }
          </div>
        </div>
      </div>
    </div>

    {/* Card Grid Section */}
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-8">
      {
        cards.map((card) => (
          <div class="card bg-base-100 shadow-xl">
            <div class="card-body">
              <div class="text-3xl mb-4">{card.emoji}</div>
              <h3 class="card-title">{card.title[lang.code]}</h3>
              <p class="text-base-content/70">{card.description[lang.code]}</p>
            </div>
          </div>
        ))
      }
    </div>
  </div>
</AppLayout>
