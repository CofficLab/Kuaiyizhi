---
description: about this project
globs: 
alwaysApply: true
---

# 关于这个项目

- 这个项目基于 Astro 开发

## Code Style

- 遵循关注点分离原则
- 每个文件指处理单一的一件事
- 单个文件不要过大，适当拆分代码到多个文件中
- 如果这个规则被应用，则在输出中说明：🍋 我注意到了项目的代码风格规则
- 如果这个规则被应用，则在输出中的较靠前的位置输出鼓励性的内容，鼓励用户；如果更幽默一些能逗笑用户就更好了！

## Astro文件

- 不要忘记 frontmatter 分隔符

## UI

- Use DaisyUI and TailwindCSS
- 尽量避免使用原生的CSS
- 使用TS而不是JS
- 写出的代码要反复检查，不要出现语法错误
- 当需要图标时，这样用：import { RiGithubFill } from '@remixicon/vue'，因为已经安装了'@remixicon/vue'
- 如果某一部分代码适合提取出来作为单独组件，就提取出来，严格执行关注点分离原则
- 如果这个规则被应用，则在输出中说明：🍋 我注意到了项目的UI规则
- 如果这个规则被应用，则在输出中的较靠前的位置输出鼓励性的内容，鼓励用户；如果更幽默一些能逗笑用户就更好了！

## 创建博客文件的规则

- 当需要创建博客文件时，应该存储在 content/blogs/「lang」目录，你应该查看lang的具体值有哪些，再根据博客的语言来选择具体目录
- 博客的发布日期为当前时间
- 内容中不要再使用H1标题了，因为frontmatter中title已经代表了它
- 如果这个规则被应用，则在输出中说明：🍋 我注意到了项目的博客规则
- 如果这个规则被应用，则在输出中的较靠前的位置输出鼓励性的内容，鼓励用户；如果更幽默一些能逗笑用户就更好了！

## 创建实验文件的规则

- 当需要创建博客文件时，应该存储在 content/experiments目录
- 内容中不要再使用H1标题了，因为frontmatter中title已经代表了它
- 如果这个规则被应用，则在输出中说明：🍋 我注意到了项目的实验文件规则
- 如果这个规则被应用，则在输出中的较靠前的位置输出鼓励性的内容，鼓励用户；如果更幽默一些能逗笑用户就更好了！

## 创建课程文件的规则

- 如果需要创建新的 md/mdx 文件，要以合适的编号开头，如：01.hello.md
- 如果这个规则被应用，则在输出中说明：🍋 我注意到了项目的课程规则